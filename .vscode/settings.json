{
  "extensions": {
    "recommendations": [
      "actboy168.tasks",
      "adam-bender.commit-message-editor",
      "alberto-varela.monorepo-focus-workspace",
      "alexdima.copy-relative-path",
      "amodio.toggle-excluded-files",
      "antfu.file-nesting",
      "antfu.goto-alias",
      "antfu.iconify",
      "antfu.icons-carbon",
      "antfu.pnpm-catalog-lens",
      "antfu.unocss",
      "antfu.vite",
      "antfu.vscode-server-controller",
      "bierner.markdown-checkbox",
      "bierner.markdown-emoji",
      "bierner.markdown-footnotes",
      "bierner.markdown-mermaid",
      "bierner.markdown-preview-github-styles",
      "bierner.markdown-yaml-preamble",
      "chakrounanas.turbo-console-log",
      "chrisbibby.hide-git-ignored",
      "christian-kohler.npm-intellisense",
      "christian-kohler.path-intellisense",
      "codezombiech.gitignore",
      "cweijan.xmind-viewer",
      "dbaeumer.vscode-eslint",
      "eamodio.gitlens",
      "ebenezerdon.npm-studio",
      "editorconfig.editorconfig",
      "eliostruyf.vscode-hide-comments",
      "emeraldwalk.runonsave",
      "file-icons.file-icons",
      "fireside21.cshtml-tm",
      "folke.vscode-monorepo-workspace",
      "formulahendry.auto-rename-tag",
      "formulahendry.code-runner",
      "foxundermoon.shell-format",
      "geeksharp.openssl-configuration-file",
      "gerrnperl.outline-map",
      "github.remotehub",
      "github.vscode-github-actions",
      "hancel.markdown-image",
      "harrydowning.swap-tsconfig",
      "hongyin163.excel-to-html-table",
      "ibm.output-colorizer",
      "ionutvmi.path-autocomplete",
      "jock.svg",
      "johnpapa.vscode-peacock",
      "johnsoncodehk.vscode-tsconfig-helper",
      "jvitor83.types-autoinstaller",
      "kricsleo.vscode-package-json-inspector",
      "lacroixdavid1.vscode-format-context-menu",
      "linbudu.pnpm-vscode-helper",
      "lmcarreiro.vscode-smart-column-indenter",
      "maggie.eslint-rules-zh-plugin",
      "mainawycliffe.view-package-on-npm",
      "metaseed.metago",
      "metaseed.metajump",
      "metaseed.metaword",
      "mhutchie.git-graph",
      "mike-co.import-sorter",
      "mikestead.dotenv",
      "mintlify.document",
      "mpontus.tab-cycle",
      "ms-python.debugpy",
      "ms-python.python",
      "ms-python.vscode-pylance",
      "ms-vscode-remote.remote-wsl-recommender",
      "ms-vscode.extension-test-runner",
      "ms-vscode.js-debug-nightly",
      "ms-vscode.live-server",
      "ms-vscode.powershell",
      "ms-vscode.remote-repositories",
      "mtxr.sqltools",
      "mxsdev.typescript-explorer",
      "neotan.vscode-auto-restart-typescript-eslint-servers",
      "oouo-diogo-perdigao.docthis",
      "patcx.vscode-nuget-gallery",
      "peterschmalfeldt.explorer-exclude",
      "pflannery.vscode-versionlens",
      "pkief.material-icon-theme",
      "pmneo.tsimporter",
      "qwtel.sqlite-viewer",
      "redhat.vscode-xml",
      "redhat.vscode-yaml",
      "savh.json5-kit",
      "sirtori.indenticator",
      "sleistner.vscode-fileutils",
      "spmeesseman.vscode-taskexplorer",
      "tencent-cloud.coding-copilot",
      "typeholes.ts-versions-switcher",
      "usernamehw.errorlens",
      "vivaxy.vscode-conventional-commits",
      "vscode-icons-team.vscode-icons",
      "vue.volar",
      "wix.vscode-import-cost",
      "wmaurer.change-case",
      "yoavbls.pretty-ts-errors",
      "ypresto.vscode-intelli-refactor",
      "yrm.type-challenges",
      "zaaack.markdown-editor"
    ]
  },
  "folders": [
    {
      "name": "âœ¨ sugar-wiki-monorepo",
      "path": "."
    },
    {
      "name": "ðŸ“¦ blogpress",
      "path": "packages/blogpress"
    },
    {
      "name": "ðŸ“¦ @sugarat/create-theme",
      "path": "packages/create-theme"
    },
    {
      "name": "ðŸ“¦ @sugarat/theme-shared",
      "path": "packages/shared"
    },
    {
      "name": "ðŸ“¦ @sugarat/theme",
      "path": "packages/theme"
    },
    {
      "name": "ðŸ“¦ vitepress-plugin-51la",
      "path": "packages/vitepress-plugin-51la"
    },
    {
      "name": "ðŸ“¦ vitepress-plugin-announcement",
      "path": "packages/vitepress-plugin-announcement"
    },
    {
      "name": "ðŸ“¦ vitepress-plugin-pagefind",
      "path": "packages/vitepress-plugin-pagefind"
    },
    {
      "name": "ðŸ“¦ vitepress-plugin-rss",
      "path": "packages/vitepress-plugin-rss"
    },
    {
      "name": "vitepress-plugin-slot-inject-template",
      "path": "template/vitepress-plugin-slot-inject-template"
    }
  ],
  "settings": {
    "typescript.tsdk": "node_modules\\typescript\\lib",
    "files.exclude": {
      "**/.git": true,
      "**/.svn": true,
      "**/.hg": true,
      "**/CVS": true,
      "**/.DS_Store": true,
      "**/Thumbs.db": true,
      "**/node_modules": false
    },
    "explorerExclude.backup": {},
    "code-runner.clearPreviousOutput": true,
    "code-runner.executorMap": {
      "typescript": "cd $dir && npx tsx $fullFileName",
      "ahk": "autohotkey",
      "applescript": "osascript",
      "autoit": "autoit3",
      "bat": "cmd /c",
      "c": "cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
      "clojure": "lein exec",
      "coffeescript": "coffee",
      "cpp": "cd $dir && g++ $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
      "crystal": "crystal",
      "csharp": "scriptcs",
      "d": "cd $dir && dmd $fileName && $dir$fileNameWithoutExt",
      "dart": "dart",
      "erlang": "escript",
      "fortran": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
      "fortran_fixed-form": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
      "fortran-modern": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
      "FortranFreeForm": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
      "fsharp": "fsi",
      "gleam": "gleam run -m $fileNameWithoutExt",
      "go": "go run",
      "groovy": "groovy",
      "haskell": "runghc",
      "haxe": "haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",
      "java": "cd $dir && javac $fileName && java $fileNameWithoutExt",
      "javascript": "cd $dir && node  --es-module-specifier-resolution=node  $fullFileName",
      "julia": "julia",
      "kit": "kitc --run",
      "less": "cd $dir && lessc $fileName $fileNameWithoutExt.css",
      "lisp": "sbcl --script",
      "lua": "lua",
      "mojo": "mojo run",
      "nim": "nim compile --verbosity:0 --hints:off --run",
      "objective-c": "cd $dir && gcc -framework Cocoa $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
      "ocaml": "ocaml",
      "pascal": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",
      "perl": "perl",
      "perl6": "perl6",
      "php": "php",
      "pkl": "cd $dir && pkl eval -f yaml $fileName -o $fileNameWithoutExt.yaml",
      "powershell": "powershell -ExecutionPolicy ByPass -File",
      "python": "python -u",
      "r": "Rscript",
      "racket": "racket",
      "ruby": "ruby",
      "rust": "cd $dir && rustc $fileName && $dir$fileNameWithoutExt",
      "sass": "sass --style expanded",
      "scala": "scala",
      "scheme": "csi -script",
      "scss": "scss --style expanded",
      "shellscript": "bash",
      "sml": "cd $dir && sml $fileName",
      "spwn": "spwn build",
      "swift": "swift",
      "v": "v run",
      "vbscript": "cscript //Nologo",
      "zig": "zig run"
    },
    "code-runner.executorMapByFileExtension": {
      ".ts": "cd $dir && npx tsx $fullFileName"
    },
    "[javascript]": {
      "editor.defaultFormatter": "vscode.typescript-language-features"
    },
    "[jsonc]": {
      "editor.defaultFormatter": "vscode.json-language-features"
    },
    "[markdown]": {
      "editor.defaultFormatter": "dbaeumer.vscode-eslint"
    },
    "[typescript]": {
      "editor.defaultFormatter": "dbaeumer.vscode-eslint"
    },
    "[vue]": {
      "editor.defaultFormatter": "Vue.volar"
    },
    "editor.formatOnPaste": false,
    "editor.formatOnSave": false,
    "editor.formatOnSaveMode": "file",
    "editor.formatOnType": false,
    "editor.minimap.enabled": false,
    "editor.trimAutoWhitespace": false,
    "autoRestart.fileGlobForESLint": [
      "**/{.eslintrc,eslint.config}.{js,cjs,yaml,yml,json,mjs,ts,mts}"
    ],
    "autoRestart.fileGlobForTypescript": [
      "**/{tsconfig,tsconfig.base,base.tsconfig}.{json,app.json,app.js,js,ts}"
    ],
    "autoRestart.monitorFilesForESLint": true,
    "autoRestart.showRestartNotificationForESLint": true,
    "ColorfulMonorepo.workspaces.collection": [],
    "commit-message-editor.dynamicTemplate": [
      "{type}{scope}: {description}",
      "",
      "{body}",
      "",
      "{breaking_change}{footer}"
    ],
    "commit-message-editor.staticTemplate": [
      "feat: Short description",
      "",
      "Message body",
      "",
      "Message footer"
    ],
    "commit-message-editor.tokens": [
      {
        "description": "Type of changes",
        "label": "Type",
        "name": "type",
        "options": [
          {
            "label": "---",
            "value": ""
          },
          {
            "description": "Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)",
            "label": "build"
          },
          {
            "description": "Updating grunt tasks etc; no production code change",
            "label": "chore"
          },
          {
            "description": "Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs)",
            "label": "ci"
          },
          {
            "description": "Documentation only changes",
            "label": "docs"
          },
          {
            "description": "A new feature",
            "label": "feat"
          },
          {
            "description": "A bug fix",
            "label": "fix"
          },
          {
            "description": "A code change that improves performance",
            "label": "perf"
          },
          {
            "description": "A code change that neither fixes a bug nor adds a feature",
            "label": "refactor"
          },
          {
            "label": "revert"
          },
          {
            "description": "Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)",
            "label": "style"
          },
          {
            "description": "Adding missing tests or correcting existing tests",
            "label": "test"
          }
        ],
        "type": "enum"
      },
      {
        "description": "A scope may be provided to a commitâ€™s type, to provide additional contextual information and is contained within parenthesis, e.g., \"feat(parser): add ability to parse arrays\".",
        "label": "Scope",
        "multiline": false,
        "name": "scope",
        "prefix": "(",
        "suffix": ")",
        "type": "text"
      },
      {
        "description": "Short description in the subject line.",
        "label": "Short description",
        "multiline": false,
        "name": "description",
        "type": "text"
      },
      {
        "description": "Optional body",
        "label": "Body",
        "lines": 5,
        "maxLines": 10,
        "multiline": true,
        "name": "body",
        "type": "text"
      },
      {
        "default": false,
        "label": "Breaking change",
        "name": "breaking_change",
        "type": "boolean",
        "value": "BREAKING CHANGE: "
      },
      {
        "description": "Optional footer",
        "label": "Footer",
        "multiline": true,
        "name": "footer",
        "type": "text"
      }
    ],
    "conventionalCommits.scopes": [
      "pkg upgrade",
      "actions",
      "scaffold",
      "theme",
      "workspace"
    ],
    "files.autoSave": "onFocusChange",
    "files.trimTrailingWhitespaceInRegexAndStrings": false,
    "git.autofetch": true,
    "git.confirmSync": false,
    "git.enableSmartCommit": true,
    "gitlens.blame.format": "${message|50?} ${agoOrDate|14-}",
    "gitlens.blame.toggleMode": "file",
    "gitlens.codeLens.enabled": false,
    "gitlens.currentLine.enabled": false,
    "gitlens.currentLine.pullRequests.enabled": false,
    "gitlens.hovers.currentLine.over": "line",
    "gitlens.hovers.enabled": false,
    "gitlens.showWelcomeOnInstall": false,
    "gitlens.statusBar.enabled": true,
    "gitlens.statusBar.pullRequests.enabled": true,
    "gitlens.views.branches.branches.layout": "list",
    "gitlens.views.commitDetails.autolinks.enabled": true,
    "javascript.experimental.updateImportsOnPaste": true,
    "javascript.format.insertSpaceAfterConstructor": true,
    "Lingma.cloudModelEnable": false,
    "Lingma.localMachineModel": false,
    "Lingma.methodQuickOperation": false,
    "markdown-preview-enhanced.alwaysShowBacklinksInPreview": true,
    "markdown-preview-enhanced.automaticallyShowPreviewOfMarkdownBeingEdited": true,
    "markdown.extension.completion.enabled": true,
    "prettier.enable": false,
    "redhat.telemetry.enabled": true,
    "vs-code-prettier-eslint.prettierLast": false,
    "workbench.colorCustomizations": {
      "sideBarTitle.foreground": "#9c643b"
    },
    "workbench.editor.alwaysShowEditorActions": true,
    "accessibility.signalOptions.volume": 70,
    "accessibility.signalOptions.experimental.delays.general": {
      "announcement": 3000,
      "sound": 400
    },
    "accessibility.signalOptions.experimental.delays.errorAtPosition": {
      "announcement": 3000,
      "sound": 1000
    },
    "accessibility.signalOptions.experimental.delays.warningAtPosition": {
      "announcement": 3000,
      "sound": 1000
    },
    "[yaml]": {
      "editor.defaultFormatter": "dbaeumer.vscode-eslint"
    },
    "[json]": {
      "editor.defaultFormatter": "vscode.json-language-features"
    },
    "[scss]": {
      "editor.defaultFormatter": "vscode.css-language-features"
    },
    "explorer.excludeGitIgnore": true,
    "eslint.problems.shortenToSingleLine": true,
    "eslint.lintTask.enable": true,
    "eslint.debug": false,
    "eslint.run": "onSave",
    "eslint.useESLintClass": true,
    "eslint.enable": true,
    "eslint.useFlatConfig": true,
    "eslint.format.enable": true,
    "eslint.ignoreUntitled": true,
    "eslint.lintTask.options": ".",
    "eslint.timeBudget.onFixes": {
      "warn": 3000,
      "error": 6000
    },
    "eslint.quiet": false,
    "editor.language.colorizedBracketPairs": [],
    "codingcopilot.commitMessageLanguage": "en",
    "editor.defaultFormatter": "Tencent-Cloud.coding-copilot",
    "[json5]": {
      "editor.defaultFormatter": "BlueGlassBlock.better-json5"
    }
  }
}